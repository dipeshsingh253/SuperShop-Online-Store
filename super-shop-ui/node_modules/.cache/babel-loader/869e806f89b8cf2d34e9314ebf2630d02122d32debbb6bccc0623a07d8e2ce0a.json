{"ast":null,"code":"var arrayMap = require('./_arrayMap'),\n  baseAt = require('./_baseAt'),\n  basePullAt = require('./_basePullAt'),\n  compareAscending = require('./_compareAscending'),\n  flatRest = require('./_flatRest'),\n  isIndex = require('./_isIndex');\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function (array, indexes) {\n  var length = array == null ? 0 : array.length,\n    result = baseAt(array, indexes);\n  basePullAt(array, arrayMap(indexes, function (index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n  return result;\n});\nmodule.exports = pullAt;","map":{"version":3,"names":["arrayMap","require","baseAt","basePullAt","compareAscending","flatRest","isIndex","pullAt","array","indexes","length","result","index","sort","module","exports"],"sources":["/home/dipesh/Documents/VSCode/super-shop-ui/node_modules/lodash/pullAt.js"],"sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseAt = require('./_baseAt'),\n    basePullAt = require('./_basePullAt'),\n    compareAscending = require('./_compareAscending'),\n    flatRest = require('./_flatRest'),\n    isIndex = require('./_isIndex');\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function(array, indexes) {\n  var length = array == null ? 0 : array.length,\n      result = baseAt(array, indexes);\n\n  basePullAt(array, arrayMap(indexes, function(index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n\n  return result;\n});\n\nmodule.exports = pullAt;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;EACjCC,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC;EAC7BE,UAAU,GAAGF,OAAO,CAAC,eAAe,CAAC;EACrCG,gBAAgB,GAAGH,OAAO,CAAC,qBAAqB,CAAC;EACjDI,QAAQ,GAAGJ,OAAO,CAAC,aAAa,CAAC;EACjCK,OAAO,GAAGL,OAAO,CAAC,YAAY,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,MAAM,GAAGF,QAAQ,CAAC,UAASG,KAAK,EAAEC,OAAO,EAAE;EAC7C,IAAIC,MAAM,GAAGF,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGA,KAAK,CAACE,MAAM;IACzCC,MAAM,GAAGT,MAAM,CAACM,KAAK,EAAEC,OAAO,CAAC;EAEnCN,UAAU,CAACK,KAAK,EAAER,QAAQ,CAACS,OAAO,EAAE,UAASG,KAAK,EAAE;IAClD,OAAON,OAAO,CAACM,KAAK,EAAEF,MAAM,CAAC,GAAG,CAACE,KAAK,GAAGA,KAAK;EAChD,CAAC,CAAC,CAACC,IAAI,CAACT,gBAAgB,CAAC,CAAC;EAE1B,OAAOO,MAAM;AACf,CAAC,CAAC;AAEFG,MAAM,CAACC,OAAO,GAAGR,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}