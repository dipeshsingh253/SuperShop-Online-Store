{"ast":null,"code":"var apply = require('./_apply'),\n  arrayPush = require('./_arrayPush'),\n  baseRest = require('./_baseRest'),\n  castSlice = require('./_castSlice'),\n  toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * create function and an array of arguments much like\n * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n *\n * **Note:** This method is based on the\n * [spread operator](https://mdn.io/spread_operator).\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Function\n * @param {Function} func The function to spread arguments over.\n * @param {number} [start=0] The start position of the spread.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.spread(function(who, what) {\n *   return who + ' says ' + what;\n * });\n *\n * say(['fred', 'hello']);\n * // => 'fred says hello'\n *\n * var numbers = Promise.all([\n *   Promise.resolve(40),\n *   Promise.resolve(36)\n * ]);\n *\n * numbers.then(_.spread(function(x, y) {\n *   return x + y;\n * }));\n * // => a Promise of 76\n */\nfunction spread(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = start == null ? 0 : nativeMax(toInteger(start), 0);\n  return baseRest(function (args) {\n    var array = args[start],\n      otherArgs = castSlice(args, 0, start);\n    if (array) {\n      arrayPush(otherArgs, array);\n    }\n    return apply(func, this, otherArgs);\n  });\n}\nmodule.exports = spread;","map":{"version":3,"names":["apply","require","arrayPush","baseRest","castSlice","toInteger","FUNC_ERROR_TEXT","nativeMax","Math","max","spread","func","start","TypeError","args","array","otherArgs","module","exports"],"sources":["/home/dipesh/Documents/VSCode/super-shop-ui/node_modules/lodash/spread.js"],"sourcesContent":["var apply = require('./_apply'),\n    arrayPush = require('./_arrayPush'),\n    baseRest = require('./_baseRest'),\n    castSlice = require('./_castSlice'),\n    toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * create function and an array of arguments much like\n * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n *\n * **Note:** This method is based on the\n * [spread operator](https://mdn.io/spread_operator).\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Function\n * @param {Function} func The function to spread arguments over.\n * @param {number} [start=0] The start position of the spread.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.spread(function(who, what) {\n *   return who + ' says ' + what;\n * });\n *\n * say(['fred', 'hello']);\n * // => 'fred says hello'\n *\n * var numbers = Promise.all([\n *   Promise.resolve(40),\n *   Promise.resolve(36)\n * ]);\n *\n * numbers.then(_.spread(function(x, y) {\n *   return x + y;\n * }));\n * // => a Promise of 76\n */\nfunction spread(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = start == null ? 0 : nativeMax(toInteger(start), 0);\n  return baseRest(function(args) {\n    var array = args[start],\n        otherArgs = castSlice(args, 0, start);\n\n    if (array) {\n      arrayPush(otherArgs, array);\n    }\n    return apply(func, this, otherArgs);\n  });\n}\n\nmodule.exports = spread;\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;EAC3BC,SAAS,GAAGD,OAAO,CAAC,cAAc,CAAC;EACnCE,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;EACjCG,SAAS,GAAGH,OAAO,CAAC,cAAc,CAAC;EACnCI,SAAS,GAAGJ,OAAO,CAAC,aAAa,CAAC;;AAEtC;AACA,IAAIK,eAAe,GAAG,qBAAqB;;AAE3C;AACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC3B,IAAI,OAAOD,IAAI,IAAI,UAAU,EAAE;IAC7B,MAAM,IAAIE,SAAS,CAACP,eAAe,CAAC;EACtC;EACAM,KAAK,GAAGA,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGL,SAAS,CAACF,SAAS,CAACO,KAAK,CAAC,EAAE,CAAC,CAAC;EAC1D,OAAOT,QAAQ,CAAC,UAASW,IAAI,EAAE;IAC7B,IAAIC,KAAK,GAAGD,IAAI,CAACF,KAAK,CAAC;MACnBI,SAAS,GAAGZ,SAAS,CAACU,IAAI,EAAE,CAAC,EAAEF,KAAK,CAAC;IAEzC,IAAIG,KAAK,EAAE;MACTb,SAAS,CAACc,SAAS,EAAED,KAAK,CAAC;IAC7B;IACA,OAAOf,KAAK,CAACW,IAAI,EAAE,IAAI,EAAEK,SAAS,CAAC;EACrC,CAAC,CAAC;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAGR,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}