{"ast":null,"code":"var createPadding = require('./_createPadding'),\n  stringSize = require('./_stringSize'),\n  toInteger = require('./toInteger'),\n  toString = require('./toString');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n  nativeFloor = Math.floor;\n\n/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n  var strLength = length ? stringSize(string) : 0;\n  if (!length || strLength >= length) {\n    return string;\n  }\n  var mid = (length - strLength) / 2;\n  return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);\n}\nmodule.exports = pad;","map":{"version":3,"names":["createPadding","require","stringSize","toInteger","toString","nativeCeil","Math","ceil","nativeFloor","floor","pad","string","length","chars","strLength","mid","module","exports"],"sources":["/home/dipesh/Documents/VSCode/super-shop-ui/node_modules/lodash/pad.js"],"sourcesContent":["var createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeFloor = Math.floor;\n\n/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  if (!length || strLength >= length) {\n    return string;\n  }\n  var mid = (length - strLength) / 2;\n  return (\n    createPadding(nativeFloor(mid), chars) +\n    string +\n    createPadding(nativeCeil(mid), chars)\n  );\n}\n\nmodule.exports = pad;\n"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,kBAAkB,CAAC;EAC3CC,UAAU,GAAGD,OAAO,CAAC,eAAe,CAAC;EACrCE,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;EAClCG,QAAQ,GAAGH,OAAO,CAAC,YAAY,CAAC;;AAEpC;AACA,IAAII,UAAU,GAAGC,IAAI,CAACC,IAAI;EACtBC,WAAW,GAAGF,IAAI,CAACG,KAAK;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,GAAG,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAE;EAClCF,MAAM,GAAGP,QAAQ,CAACO,MAAM,CAAC;EACzBC,MAAM,GAAGT,SAAS,CAACS,MAAM,CAAC;EAE1B,IAAIE,SAAS,GAAGF,MAAM,GAAGV,UAAU,CAACS,MAAM,CAAC,GAAG,CAAC;EAC/C,IAAI,CAACC,MAAM,IAAIE,SAAS,IAAIF,MAAM,EAAE;IAClC,OAAOD,MAAM;EACf;EACA,IAAII,GAAG,GAAG,CAACH,MAAM,GAAGE,SAAS,IAAI,CAAC;EAClC,OACEd,aAAa,CAACQ,WAAW,CAACO,GAAG,CAAC,EAAEF,KAAK,CAAC,GACtCF,MAAM,GACNX,aAAa,CAACK,UAAU,CAACU,GAAG,CAAC,EAAEF,KAAK,CAAC;AAEzC;AAEAG,MAAM,CAACC,OAAO,GAAGP,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}